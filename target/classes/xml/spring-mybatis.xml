<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="org.huoran.main" />  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:/properties/jdbc.properties" />  
    </bean>  
  
    <!-- 配置数据库连接：org.apache.commons.dbcp.BasicDataSource -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  
       destroy-method="close">
       <property name="url" value="${jdbcUrl}" />
       <property name="username" value="${username}" />
       <property name="password" value="${password}" />
       <property name="driverClassName" value="${driverClassName}" />
       <property name="filters" value="${filters}" />
       <property name="maxActive" value="${maxActive}" />
       <property name="initialSize" value="${initialSize}" />
       <property name="maxWait" value="${maxWait}" />
       <property name="minIdle" value="${minIdle}" />
       <property name="validationQuery" value="${validationQuery}" />
       <property name="testWhileIdle" value="${testWhileIdle}" />
       <property name="testOnBorrow" value="${testOnBorrow}" />
       <property name="testOnReturn" value="${testOnReturn}" />
       <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
       <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />  
       <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
       <property name="removeAbandoned" value="${removeAbandoned}" /> <!-- 打开removeAbandoned功能 --> 
       <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" /> <!-- 1800秒，也就是30分钟 -->  
       <property name="logAbandoned" value="${logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->  
        <!-- config.decrypt=true如果密码是druid加密后的密码则提醒数据源要解密密码· -->
        <!-- config.file=http://127.0.0.1/druid-pool.properties 可配置远程路径文件 或file:///home/admin/druid-pool.properties-->
         <!-- <property name="connectionProperties"
         value="config.file=/properties/jdbcl.properties;config.decrypt=true" />-->
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:/mapping/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="org.huoran.main.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
  
</beans>  